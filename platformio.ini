; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html
;                       _____________________________
;Enable-Pin  __________|                             von Avr-Mcu (aktiviert Esp-modul)
;            _____________________________
;State-Pin              <Connect time>    |_________ von ESP-Modul (Ready für Datenverkehr)

;Beschreibung:
;Esp-Modul wird über Enable-Pin(=High) vom Avr-Mcu aktiviert.
;Esp-Modul setzt State-Pin(=Led) für die Uart-Aktivierung im Avr(Low=Connected,High=wait).
;die tx boottmeldungen werden dadurch ignoriert, nach ca. 18sec wird die time tm struct zum avr gesendet.
;TCP-Bridge ist mit 115200 aktiv, IP: Rolladen(192.168.0.49) Port 9999 
;Mit Wifi-Manager , dh. bei not connect wird AP RolladenAP aktiv, hier kann man die Wifi-Daten eingeben.
;https://randomnerdtutorials.com/wifimanager-with-esp8266-autoconnect-custom-parameter-and-manage-your-ssid-and-password/
;https://github.com/tzapu/WiFiManager
;NTP-Zeit wird von fritz.box geholt.
;https://registry.platformio.org/libraries/jandrassy/WiFiEspAT/examples/Special/SNTPTime/SNTPTime.ino
;Tcp-Bridge Verwendung:
;-Firmware Update Avr via avrdude
;-App control 

[platformio]
src_dir=Serial2Net_ESP8266

;INFO DT-06, ESP-M1/2 Module
[env:esp8285]
platform = espressif8266
board = esp8285
; change microcontroller
board_build.mcu = esp8266
; change MCU frequency
board_build.f_cpu = 80000000L
upload_protocol = esptool

framework = arduino
board_build.filesystem = littlefs
upload_speed = 115200
monitor_speed = 115200
upload_port = COM3

;Library
lib_deps =
    https://github.com/tzapu/WiFiManager.git
    https://github.com/bblanchon/ArduinoJson

description = Rolladen_232
